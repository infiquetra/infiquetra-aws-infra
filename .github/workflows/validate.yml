name: Validate CDK

on:
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        
    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        
    - name: Install Node.js for CDK CLI
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install CDK CLI
      run: npm install -g aws-cdk
      
    - name: Run Python linting
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Run Python formatting check
      run: black --check .
      
    - name: Run import sorting check
      run: isort --check-only .
      
    - name: Run security scanning
      run: bandit -r . -f json -o bandit-report.json || true
      
    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      with:
        name: bandit-report
        path: bandit-report.json
        
    - name: CDK Synthesis
      run: cdk synth --all
      env:
        CDK_DEFAULT_ACCOUNT: "645166163764"
        CDK_DEFAULT_REGION: "us-east-1"
        
    - name: Run CloudFormation Linting
      run: |
        pip install cfn-lint
        cfn-lint cdk.out/*.template.json
        
    - name: Upload CDK artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cdk-artifacts
        path: cdk.out/