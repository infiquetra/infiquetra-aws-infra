[project]
name = "infiquetra-aws-infra"
version = "0.1.0"
description = "AWS infrastructure as code for Infiquetra LLC using CDK"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "aws-cdk-lib>=2.166.0",
    "constructs>=10.0.0",
    "boto3>=1.39.0",
    "python-dotenv>=1.1.1",
    "pbr>=6.1.1",
]

[dependency-groups]
dev = [
    "aws-lambda-powertools>=3.17.0",
    "bandit>=1.8.6",
    "black>=25.1.0",
    "boto3-stubs[essential]>=1.39.13",
    "cfn-lint>=1.38.0",
    "codeguru-profiler-agent>=1.2.5",
    "flake8>=7.3.0",
    "ipdb>=0.13.13",
    "ipython>=9.4.0",
    "isort>=6.0.1",
    "mypy>=1.17.0",
    "pbr>=6.1.1",
    "pdoc3>=0.11.6",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "python-dotenv>=1.1.1",
    "ruff>=0.12.5",
    "safety>=3.6.0",
    "setuptools>=80.9.0",
    "types-requests>=2.32.4.20250611",
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "S",      # bandit security
    "N",      # pep8-naming
    "SIM",    # flake8-simplify
    "RUF",    # Ruff-specific rules
]
ignore = [
    "S101",   # assert used
    "S603",   # subprocess call
    "S607",   # subprocess with shell
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S106", "S108"]

[tool.black]
line-length = 88
target-version = ["py313"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["infiquetra_aws_infra"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
exclude = [
    "github-oidc-bootstrap/app.py"
]

[[tool.mypy.overrides]]
module = [
    "aws_cdk.*",
    "constructs.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.bandit]
exclude_dirs = ["tests", ".venv", "build"]
skips = ["B101", "B601"]

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"]
